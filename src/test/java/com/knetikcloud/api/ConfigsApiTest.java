/*
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.knetikcloud.api;

import com.knetikcloud.client.ApiException;
import com.knetikcloud.model.Config;
import com.knetikcloud.model.PageResourceConfig;
import com.knetikcloud.model.Result;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConfigsApi
 */
@Ignore
public class ConfigsApiTest {

    private final ConfigsApi api = new ConfigsApi();

    
    /**
     * Create a new config
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createConfigTest() throws ApiException {
        Config config = null;
        Config response = api.createConfig(config);

        // TODO: test validations
    }
    
    /**
     * Delete an existing config
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteConfigTest() throws ApiException {
        String name = null;
        api.deleteConfig(name);

        // TODO: test validations
    }
    
    /**
     * Get a single config
     *
     * Only configs that are public readable will be shown without admin access
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConfigTest() throws ApiException {
        String name = null;
        Config response = api.getConfig(name);

        // TODO: test validations
    }
    
    /**
     * List and search configs
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConfigsTest() throws ApiException {
        String filterSearch = null;
        Integer size = null;
        Integer page = null;
        String order = null;
        PageResourceConfig response = api.getConfigs(filterSearch, size, page, order);

        // TODO: test validations
    }
    
    /**
     * Update an existing config
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateConfigTest() throws ApiException {
        String name = null;
        Config config = null;
        api.updateConfig(name, config);

        // TODO: test validations
    }
    
}
