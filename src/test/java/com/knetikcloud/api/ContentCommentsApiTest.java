/*
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.knetikcloud.api;

import com.knetikcloud.client.ApiException;
import com.knetikcloud.model.CommentResource;
import com.knetikcloud.model.CommentSearch;
import com.knetikcloud.model.PageResourceCommentResource;
import com.knetikcloud.model.Result;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContentCommentsApi
 */
@Ignore
public class ContentCommentsApiTest {

    private final ContentCommentsApi api = new ContentCommentsApi();

    
    /**
     * Add a new comment
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCommentTest() throws ApiException {
        CommentResource commentResource = null;
        CommentResource response = api.addComment(commentResource);

        // TODO: test validations
    }
    
    /**
     * Delete a comment
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCommentTest() throws ApiException {
        Long id = null;
        api.deleteComment(id);

        // TODO: test validations
    }
    
    /**
     * Return a comment
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCommentTest() throws ApiException {
        Long id = null;
        CommentResource response = api.getComment(id);

        // TODO: test validations
    }
    
    /**
     * Returns a page of comments
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCommentsTest() throws ApiException {
        String context = null;
        Integer contextId = null;
        Integer size = null;
        Integer page = null;
        PageResourceCommentResource response = api.getComments(context, contextId, size, page);

        // TODO: test validations
    }
    
    /**
     * Search the comment index
     *
     * The body is an ElasticSearch query json. Please see their &lt;a href&#x3D;&#39;https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html&#39;&gt;documentation&lt;/a&gt; for details on the format and search options
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchCommentsTest() throws ApiException {
        Object query = null;
        Integer size = null;
        Integer page = null;
        CommentSearch response = api.searchComments(query, size, page);

        // TODO: test validations
    }
    
    /**
     * Update a comment
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCommentTest() throws ApiException {
        Long id = null;
        String content = null;
        api.updateComment(id, content);

        // TODO: test validations
    }
    
}
