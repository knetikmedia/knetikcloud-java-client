/*
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.knetikcloud.api;

import com.knetikcloud.client.ApiException;
import com.knetikcloud.model.ClientResource;
import com.knetikcloud.model.PageResourceRoleResource;
import com.knetikcloud.model.Result;
import com.knetikcloud.model.RoleResource;
import com.knetikcloud.model.UserResource;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthRolesApi
 */
@Ignore
public class AuthRolesApiTest {

    private final AuthRolesApi api = new AuthRolesApi();

    
    /**
     * Create a new role
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRoleTest() throws ApiException {
        RoleResource roleResource = null;
        RoleResource response = api.createRole(roleResource);

        // TODO: test validations
    }
    
    /**
     * Delete a role
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRoleTest() throws ApiException {
        String role = null;
        Boolean force = null;
        api.deleteRole(role, force);

        // TODO: test validations
    }
    
    /**
     * Get roles for a client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getClientRolesTest() throws ApiException {
        String clientKey = null;
        List<RoleResource> response = api.getClientRoles(clientKey);

        // TODO: test validations
    }
    
    /**
     * Get a single role
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRoleTest() throws ApiException {
        String role = null;
        RoleResource response = api.getRole(role);

        // TODO: test validations
    }
    
    /**
     * List and search roles
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRolesTest() throws ApiException {
        Integer size = null;
        Integer page = null;
        String order = null;
        PageResourceRoleResource response = api.getRoles(size, page, order);

        // TODO: test validations
    }
    
    /**
     * Get roles for a user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserRolesTest() throws ApiException {
        Integer userId = null;
        List<RoleResource> response = api.getUserRoles(userId);

        // TODO: test validations
    }
    
    /**
     * Set roles for a client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setClientRolesTest() throws ApiException {
        String clientKey = null;
        List<String> rolesList = null;
        ClientResource response = api.setClientRoles(clientKey, rolesList);

        // TODO: test validations
    }
    
    /**
     * Set permissions for a role
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setPermissionsForRoleTest() throws ApiException {
        String role = null;
        List<String> permissionsList = null;
        RoleResource response = api.setPermissionsForRole(role, permissionsList);

        // TODO: test validations
    }
    
    /**
     * Set roles for a user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setUserRolesTest() throws ApiException {
        Integer userId = null;
        List<String> rolesList = null;
        UserResource response = api.setUserRoles(userId, rolesList);

        // TODO: test validations
    }
    
    /**
     * Update a role
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateRoleTest() throws ApiException {
        String role = null;
        RoleResource roleResource = null;
        RoleResource response = api.updateRole(role, roleResource);

        // TODO: test validations
    }
    
}
