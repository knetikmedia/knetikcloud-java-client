/*
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.knetikcloud.api;

import com.knetikcloud.client.ApiException;
import com.knetikcloud.model.ClientResource;
import com.knetikcloud.model.GrantTypeResource;
import com.knetikcloud.model.PageResourceClientResource;
import com.knetikcloud.model.Result;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthClientsApi
 */
@Ignore
public class AuthClientsApiTest {

    private final AuthClientsApi api = new AuthClientsApi();

    
    /**
     * Create a new client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createClientTest() throws ApiException {
        ClientResource clientResource = null;
        ClientResource response = api.createClient(clientResource);

        // TODO: test validations
    }
    
    /**
     * Delete a client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteClientTest() throws ApiException {
        String clientKey = null;
        api.deleteClient(clientKey);

        // TODO: test validations
    }
    
    /**
     * Get a single client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getClientTest() throws ApiException {
        String clientKey = null;
        ClientResource response = api.getClient(clientKey);

        // TODO: test validations
    }
    
    /**
     * List available client grant types
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getClientGrantTypesTest() throws ApiException {
        List<GrantTypeResource> response = api.getClientGrantTypes();

        // TODO: test validations
    }
    
    /**
     * List and search clients
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getClientsTest() throws ApiException {
        Integer size = null;
        Integer page = null;
        String order = null;
        PageResourceClientResource response = api.getClients(size, page, order);

        // TODO: test validations
    }
    
    /**
     * Set grant types for a client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setClientGrantTypesTest() throws ApiException {
        String clientKey = null;
        List<String> grantList = null;
        api.setClientGrantTypes(clientKey, grantList);

        // TODO: test validations
    }
    
    /**
     * Set redirect uris for a client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setClientRedirectUrisTest() throws ApiException {
        String clientKey = null;
        List<String> redirectList = null;
        api.setClientRedirectUris(clientKey, redirectList);

        // TODO: test validations
    }
    
    /**
     * Update a client
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateClientTest() throws ApiException {
        String clientKey = null;
        ClientResource clientResource = null;
        ClientResource response = api.updateClient(clientKey, clientResource);

        // TODO: test validations
    }
    
}
