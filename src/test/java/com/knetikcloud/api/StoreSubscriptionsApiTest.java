/*
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.knetikcloud.api;

import com.knetikcloud.client.ApiException;
import com.knetikcloud.model.PageResourceSubscriptionResource;
import com.knetikcloud.model.PageResourceSubscriptionTemplateResource;
import com.knetikcloud.model.Result;
import com.knetikcloud.model.SubscriptionResource;
import com.knetikcloud.model.SubscriptionTemplateResource;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StoreSubscriptionsApi
 */
@Ignore
public class StoreSubscriptionsApiTest {

    private final StoreSubscriptionsApi api = new StoreSubscriptionsApi();

    
    /**
     * Creates a subscription item and associated plans
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSubscriptionTest() throws ApiException {
        SubscriptionResource subscriptionResource = null;
        SubscriptionResource response = api.createSubscription(subscriptionResource);

        // TODO: test validations
    }
    
    /**
     * Create a subscription template
     *
     * Subscription Templates define a type of subscription and the properties they have.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSubscriptionTemplateTest() throws ApiException {
        SubscriptionTemplateResource subscriptionTemplateResource = null;
        SubscriptionTemplateResource response = api.createSubscriptionTemplate(subscriptionTemplateResource);

        // TODO: test validations
    }
    
    /**
     * Delete a subscription plan
     *
     * Must not be locked or a migration target
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSubscriptionTest() throws ApiException {
        Integer id = null;
        String planId = null;
        api.deleteSubscription(id, planId);

        // TODO: test validations
    }
    
    /**
     * Delete a subscription template
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSubscriptionTemplateTest() throws ApiException {
        String id = null;
        String cascade = null;
        api.deleteSubscriptionTemplate(id, cascade);

        // TODO: test validations
    }
    
    /**
     * Retrieve a single subscription item and associated plans
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSubscriptionTest() throws ApiException {
        Integer id = null;
        SubscriptionResource response = api.getSubscription(id);

        // TODO: test validations
    }
    
    /**
     * Get a single subscription template
     *
     * Subscription Templates define a type of subscription and the properties they have.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSubscriptionTemplateTest() throws ApiException {
        String id = null;
        SubscriptionTemplateResource response = api.getSubscriptionTemplate(id);

        // TODO: test validations
    }
    
    /**
     * List and search subscription templates
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSubscriptionTemplatesTest() throws ApiException {
        Integer size = null;
        Integer page = null;
        String order = null;
        PageResourceSubscriptionTemplateResource response = api.getSubscriptionTemplates(size, page, order);

        // TODO: test validations
    }
    
    /**
     * List available subscription items and associated plans
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSubscriptionsTest() throws ApiException {
        Integer size = null;
        Integer page = null;
        String order = null;
        PageResourceSubscriptionResource response = api.getSubscriptions(size, page, order);

        // TODO: test validations
    }
    
    /**
     * Processes subscriptions and charge dues
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void processSubscriptionsTest() throws ApiException {
        api.processSubscriptions();

        // TODO: test validations
    }
    
    /**
     * Updates a subscription item and associated plans
     *
     * Will not remove plans left out
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSubscriptionTest() throws ApiException {
        Integer id = null;
        SubscriptionResource subscriptionResource = null;
        api.updateSubscription(id, subscriptionResource);

        // TODO: test validations
    }
    
    /**
     * Update a subscription template
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSubscriptionTemplateTest() throws ApiException {
        String id = null;
        SubscriptionTemplateResource subscriptionTemplateResource = null;
        SubscriptionTemplateResource response = api.updateSubscriptionTemplate(id, subscriptionTemplateResource);

        // TODO: test validations
    }
    
}
