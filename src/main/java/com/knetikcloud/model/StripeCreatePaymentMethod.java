/*
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.knetikcloud.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.knetikcloud.model.PaymentMethodDetails;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * StripeCreatePaymentMethod
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-14T12:03:43.231-04:00")
public class StripeCreatePaymentMethod {
  @JsonProperty("details")
  private PaymentMethodDetails details = null;

  @JsonProperty("token")
  private String token = null;

  @JsonProperty("user_id")
  private Integer userId = null;

  public StripeCreatePaymentMethod details(PaymentMethodDetails details) {
    this.details = details;
    return this;
  }

   /**
   * Additional optional details to store on the payment method. If included, all fields in the details will override any defaults
   * @return details
  **/
  @ApiModelProperty(value = "Additional optional details to store on the payment method. If included, all fields in the details will override any defaults")
  public PaymentMethodDetails getDetails() {
    return details;
  }

  public void setDetails(PaymentMethodDetails details) {
    this.details = details;
  }

  public StripeCreatePaymentMethod token(String token) {
    this.token = token;
    return this;
  }

   /**
   * A token from Stripe to identify payment info to be tied to the customer
   * @return token
  **/
  @ApiModelProperty(required = true, value = "A token from Stripe to identify payment info to be tied to the customer")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public StripeCreatePaymentMethod userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * The id of the user, if null the logged in user is used. Admin privilege need to specify other users
   * @return userId
  **/
  @ApiModelProperty(value = "The id of the user, if null the logged in user is used. Admin privilege need to specify other users")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StripeCreatePaymentMethod stripeCreatePaymentMethod = (StripeCreatePaymentMethod) o;
    return Objects.equals(this.details, stripeCreatePaymentMethod.details) &&
        Objects.equals(this.token, stripeCreatePaymentMethod.token) &&
        Objects.equals(this.userId, stripeCreatePaymentMethod.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(details, token, userId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StripeCreatePaymentMethod {\n");
    
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

